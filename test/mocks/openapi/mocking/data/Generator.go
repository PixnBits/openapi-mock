// Code generated by mockery v2.7.4. DO NOT EDIT.

package datamock

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	openapi3 "github.com/getkin/kin-openapi/openapi3"
)

// Generator is an autogenerated mock type for the Generator type
type Generator struct {
	mock.Mock
}

// GenerateDataBySchema provides a mock function with given fields: ctx, schema
func (_m *Generator) GenerateDataBySchema(ctx context.Context, schema *openapi3.Schema) (interface{}, error) {
	ret := _m.Called(ctx, schema)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(context.Context, *openapi3.Schema) interface{}); ok {
		r0 = rf(ctx, schema)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *openapi3.Schema) error); ok {
		r1 = rf(ctx, schema)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
